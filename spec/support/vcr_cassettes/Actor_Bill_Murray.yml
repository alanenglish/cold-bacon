---
http_interactions:
- request:
    method: get
    uri: http://api.themoviedb.org/3/search/person?api_key=bcd158ce3aca8369ca10bc884546da6e&query=Bill%20Murray
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json
  response:
    status:
      code: 200
      message: OK
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After
      Cache-Control:
      - public, max-age=21600
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Mon, 21 Aug 2017 20:44:30 GMT
      Etag:
      - 4669d6db6d5b6739b9194e999d907924
      Server:
      - openresty
      Vary:
      - Accept-Encoding
      X-Ratelimit-Limit:
      - '40'
      X-Ratelimit-Remaining:
      - '39'
      X-Ratelimit-Reset:
      - '1503348280'
      Content-Length:
      - '5865'
      X-Cache:
      - MISS from m00180A854B18
      X-Cache-Lookup:
      - HIT from m00180A854B18:3128
      Via:
      - 1.1 m00180A854B18 (squid/3.5.19)
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJ0b3RhbF9yZXN1bHRzIjo0LCJ0b3RhbF9wYWdlcyI6MSwicmVzdWx0cyI6W3sicG9wdWxhcml0eSI6Ny4yMzExMywiaWQiOjE1MzIsInByb2ZpbGVfcGF0aCI6IlwvN0JPb09BSUExQ25TekZTVlNKUDdzYW5pUWFCLmpwZyIsIm5hbWUiOiJCaWxsIE11cnJheSIsImtub3duX2ZvciI6W3sidm90ZV9hdmVyYWdlIjo4LCJ2b3RlX2NvdW50Ijo0MjI0LCJpZCI6MTIwNDY3LCJ2aWRlbyI6ZmFsc2UsIm1lZGlhX3R5cGUiOiJtb3ZpZSIsInRpdGxlIjoiVGhlIEdyYW5kIEJ1ZGFwZXN0IEhvdGVsIiwicG9wdWxhcml0eSI6Ny4xOTA4OTgsInBvc3Rlcl9wYXRoIjoiXC9uWDVYb3RNOXlwckNLYXJSSDRmek9xMVZNMUouanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIEdyYW5kIEJ1ZGFwZXN0IEhvdGVsIiwiZ2VucmVfaWRzIjpbMzUsMThdLCJiYWNrZHJvcF9wYXRoIjoiXC81RlBVb1F0bk5DMEMwWVo3c1VlVExxNmVacWEuanBnIiwiYWR1bHQiOmZhbHNlLCJvdmVydmlldyI6IlRoZSBHcmFuZCBCdWRhcGVzdCBIb3RlbCB0ZWxscyBvZiBhIGxlZ2VuZGFyeSBjb25jaWVyZ2UgYXQgYSBmYW1vdXMgRXVyb3BlYW4gaG90ZWwgYmV0d2VlbiB0aGUgd2FycyBhbmQgaGlzIGZyaWVuZHNoaXAgd2l0aCBhIHlvdW5nIGVtcGxveWVlIHdobyBiZWNvbWVzIGhpcyB0cnVzdGVkIHByb3TDqWfDqS4gVGhlIHN0b3J5IGludm9sdmVzIHRoZSB0aGVmdCBhbmQgcmVjb3Zlcnkgb2YgYSBwcmljZWxlc3MgUmVuYWlzc2FuY2UgcGFpbnRpbmcsIHRoZSBiYXR0bGUgZm9yIGFuIGVub3Jtb3VzIGZhbWlseSBmb3J0dW5lIGFuZCB0aGUgc2xvdyBhbmQgdGhlbiBzdWRkZW4gdXBoZWF2YWxzIHRoYXQgdHJhbnNmb3JtZWQgRXVyb3BlIGR1cmluZyB0aGUgZmlyc3QgaGFsZiBvZiB0aGUgMjB0aCBjZW50dXJ5LiIsInJlbGVhc2VfZGF0ZSI6IjIwMTQtMDItMjYifSx7InZvdGVfYXZlcmFnZSI6Ny4yLCJ2b3RlX2NvdW50IjozMzQyLCJpZCI6MTk5MDgsInZpZGVvIjpmYWxzZSwibWVkaWFfdHlwZSI6Im1vdmllIiwidGl0bGUiOiJab21iaWVsYW5kIiwicG9wdWxhcml0eSI6Ni40MzUyNDIsInBvc3Rlcl9wYXRoIjoiXC92VXp6RHBWcmFiMUJPRzNvZ3hoUkdmTE45NGQuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiWm9tYmllbGFuZCIsImdlbnJlX2lkcyI6WzM1LDI3XSwiYmFja2Ryb3BfcGF0aCI6IlwvbExnTEZ6U1pkdUg5a0J4cms2QnZvSGMxZ2cwLmpwZyIsImFkdWx0IjpmYWxzZSwib3ZlcnZpZXciOiJDb2x1bWJ1cyBoYXMgbWFkZSBhIGhhYml0IG9mIHJ1bm5pbmcgZnJvbSB3aGF0IHNjYXJlcyBoaW0uIFRhbGxhaGFzc2VlIGRvZXNuJ3QgaGF2ZSBmZWFycy4gSWYgaGUgZGlkLCBoZSdkIGtpY2sgdGhlaXIgZXZlci1saXZpbmcgYXNzLiBJbiBhIHdvcmxkIG92ZXJydW4gYnkgem9tYmllcywgdGhlc2UgdHdvIGFyZSBwZXJmZWN0bHkgZXZvbHZlZCBzdXJ2aXZvcnMuIEJ1dCBub3csIHRoZXkncmUgYWJvdXQgdG8gc3RhcmUgZG93biB0aGUgbW9zdCB0ZXJyaWZ5aW5nIHByb3NwZWN0IG9mIGFsbDogZWFjaCBvdGhlci4iLCJyZWxlYXNlX2RhdGUiOiIyMDA5LTEwLTA3In0seyJ2b3RlX2F2ZXJhZ2UiOjYuNywidm90ZV9jb3VudCI6MjcxOCwiaWQiOjI3ODkyNywidmlkZW8iOmZhbHNlLCJtZWRpYV90eXBlIjoibW92aWUiLCJ0aXRsZSI6IlRoZSBKdW5nbGUgQm9vayIsInBvcHVsYXJpdHkiOjguNTExMzQsInBvc3Rlcl9wYXRoIjoiXC92T2lwZTJteWkyNlVEd1A5Nzhoc1lPcm5VV0MuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIEp1bmdsZSBCb29rIiwiZ2VucmVfaWRzIjpbMTIsMTgsMTRdLCJiYWNrZHJvcF9wYXRoIjoiXC9lSU9Uc0dnOUZDVnJCYzRyMm5YYVY2MUpGNEYuanBnIiwiYWR1bHQiOmZhbHNlLCJvdmVydmlldyI6IkFmdGVyIGEgdGhyZWF0IGZyb20gdGhlIHRpZ2VyIFNoZXJlIEtoYW4gZm9yY2VzIGhpbSB0byBmbGVlIHRoZSBqdW5nbGUsIGEgbWFuLWN1YiBuYW1lZCBNb3dnbGkgZW1iYXJrcyBvbiBhIGpvdXJuZXkgb2Ygc2VsZiBkaXNjb3Zlcnkgd2l0aCB0aGUgaGVscCBvZiBwYW50aGVyLCBCYWdoZWVyYSwgYW5kIGZyZWUgc3Bpcml0ZWQgYmVhciwgQmFsb28uIiwicmVsZWFzZV9kYXRlIjoiMjAxNi0wNC0wNyJ9XSwiYWR1bHQiOmZhbHNlfSx7InBvcHVsYXJpdHkiOjEuMDAwMDEyLCJpZCI6NjMwNzMsInByb2ZpbGVfcGF0aCI6IlwvOFlac093czFweXJXNGg5eEhMalBEQ3dWak5CLmpwZyIsIm5hbWUiOiJCaWxseSBNdXJyYXkiLCJrbm93bl9mb3IiOlt7InZvdGVfYXZlcmFnZSI6Niwidm90ZV9jb3VudCI6MTExLCJpZCI6MjA2MDYsInZpZGVvIjpmYWxzZSwibWVkaWFfdHlwZSI6Im1vdmllIiwidGl0bGUiOiJEb2dob3VzZSIsInBvcHVsYXJpdHkiOjIuMzI1NTE0LCJwb3N0ZXJfcGF0aCI6IlwvdnVTQm9COGFKZ0d5MzEyejFrVjl5aWFNZGplLmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkRvZ2hvdXNlIiwiZ2VucmVfaWRzIjpbMzUsMjddLCJiYWNrZHJvcF9wYXRoIjoiXC9tczlzcjVFVDUzdllzeTlweUFsUjM3bGJBTmwuanBnIiwiYWR1bHQiOmZhbHNlLCJvdmVydmlldyI6IlNpeCBtZW4gd2l0aCBtaWQtbGlmZSBhbnhpZXR5IHNldCBvdXQgZm9yIGEgd2Vla2VuZCBpbiB0aGUgY291bnRyeSBpbiBhbiBhdHRlbXB0IHRvIHJlY29ubmVjdCB3aXRoIHRoZWlyIG1hc2N1bGluaXR5LiBXaGF0IHRoZXkgZmluZCBpcyBhIGNhdGFzdHJvcGhlIHNvIGhvcnJpYmxlIGFuZCBiaXphcnJlIHRoYXQgYSBtaWQtbGlmZSBjcmlzaXMgdHVybnMgb3V0IHRvIGJlIGV4YWN0bHkgd2hhdCB0aGV5IG5lZWQgdG8gc3Vydml2ZSBpdC4uLiIsInJlbGVhc2VfZGF0ZSI6IjIwMDktMDYtMTEifSx7Im9yaWdpbmFsX25hbWUiOiJFYXN0RW5kZXJzIiwiaWQiOjE4NzEsIm1lZGlhX3R5cGUiOiJ0diIsIm5hbWUiOiJFYXN0RW5kZXJzIiwidm90ZV9jb3VudCI6MTA2LCJ2b3RlX2F2ZXJhZ2UiOjMuNTQsInBvc3Rlcl9wYXRoIjoiXC9tY3ltejVQTGdjVXpRRVFQY1YyZ1dYTWxHZXIuanBnIiwiZmlyc3RfYWlyX2RhdGUiOiIxOTg1LTAyLTE5IiwicG9wdWxhcml0eSI6Ny4wNTI4ODYsImdlbnJlX2lkcyI6WzEwNzY2LDE4XSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsImJhY2tkcm9wX3BhdGgiOiJcLzI3WkVINFk4dlFFeVFZQThJVkhDV3J2a0hZWC5qcGciLCJvdmVydmlldyI6IlRoZSBldmVyeWRheSBsaXZlcyBvZiB3b3JraW5nLWNsYXNzIHJlc2lkZW50cyBvZiBBbGJlcnQgU3F1YXJlLCBhIHRyYWRpdGlvbmFsIFZpY3RvcmlhbiBzcXVhcmUgb2YgdGVycmFjZSBob3VzZXMgc3Vycm91bmRpbmcgYSBwYXJrIGluIHRoZSBFYXN0IEVuZCBvZiBMb25kb24ncyBXYWxmb3JkIGJvcm91Z2guIiwib3JpZ2luX2NvdW50cnkiOlsiR0IiXX0seyJ2b3RlX2F2ZXJhZ2UiOjYuOCwidm90ZV9jb3VudCI6NzcsImlkIjoxMzA1NCwidmlkZW8iOmZhbHNlLCJtZWRpYV90eXBlIjoibW92aWUiLCJ0aXRsZSI6IlJpc2Ugb2YgdGhlIEZvb3Rzb2xkaWVyIiwicG9wdWxhcml0eSI6My41Njk0NjIsInBvc3Rlcl9wYXRoIjoiXC9pUEpkVFo5cGU3ZmpvNHJCNllnc0xETE9nTzYuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiUmlzZSBvZiB0aGUgRm9vdHNvbGRpZXIiLCJnZW5yZV9pZHMiOlsyOCwxMiw4MCwxOCw1M10sImJhY2tkcm9wX3BhdGgiOiJcL3hramVHMkl2OXNYODh1TnZrNHBOaXBCUHg2aS5qcGciLCJhZHVsdCI6ZmFsc2UsIm92ZXJ2aWV3IjoiUmlzZSBvZiB0aGUgRm9vdHNvbGRpZXIgZm9sbG93cyB0aGUgaW5leG9yYWJsZSByaXNlIG9mIENhcmx0b24gTGVhY2ggZnJvbSBvbmUgb2YgdGhlIG1vc3QgZmVhcmVkIGdlbmVyYWxzIG9mIHRoZSBmb290YmFsbCB0ZXJyYWNlcyB0byBiZWNvbWluZyBhIG1lbWJlciBvZiBhIG5vdG9yaW91cyBnYW5nIG9mIGNyaW1pbmFscyB3aG8gcmFtcGFnZWQgdGhlaXIgd2F5IHRocm91Z2ggTG9uZG9uIGFuZCBFc3NleCBpbiB0aGUgbGF0ZSBlaWdodGllcyBhbmQgZWFybHkgbmluZXRpZXMuIiwicmVsZWFzZV9kYXRlIjoiMjAwNy0wOS0wNyJ9XSwiYWR1bHQiOmZhbHNlfSx7InBvcHVsYXJpdHkiOjEsImlkIjoxMzQ5Mjc2LCJwcm9maWxlX3BhdGgiOm51bGwsIm5hbWUiOiJCaWxseSBNdXJyYXkiLCJrbm93bl9mb3IiOltdLCJhZHVsdCI6ZmFsc2V9LHsicG9wdWxhcml0eSI6MSwiaWQiOjEzNDkyNzcsInByb2ZpbGVfcGF0aCI6bnVsbCwibmFtZSI6IkJpbGx5IE11cnJheSIsImtub3duX2ZvciI6W3sidm90ZV9hdmVyYWdlIjo3LjgsInZvdGVfY291bnQiOjE2LCJpZCI6MTM5NzUzLCJ2aWRlbyI6ZmFsc2UsIm1lZGlhX3R5cGUiOiJtb3ZpZSIsInRpdGxlIjoiQmltYm8ncyBJbml0aWF0aW9uIiwicG9wdWxhcml0eSI6MS4wMDczOTEsInBvc3Rlcl9wYXRoIjoiXC9iNjd3dXlSSUFKZlI1YTV5QUZvRDY1Q1JFZHEuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmltYm8ncyBJbml0aWF0aW9uIiwiZ2VucmVfaWRzIjpbMzUsMTZdLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJhZHVsdCI6ZmFsc2UsIm92ZXJ2aWV3IjoiQmltYm8gZmluZHMgaGltc2VsZiBzdXJyb3VuZGVkIGJ5IGEgbXlzdGVyaW91cyBncm91cCBvZiByb2JlZCBmaWd1cmVzIHdobyBpbnZpdGUgaGltIHRvIGJlY29tZSBhIG1lbWJlciBvZiB0aGVpciBzZWNyZXQgb3JnYW5pc2F0aW9uLiBXaGVuIGhlIHJlZnVzZXMsIHRoZXkgZmxpbmcgaGltIHRocm91Z2ggYSBuaWdodG1hcmlzaCBzZXF1ZW5jZSBvZiB0ZXJyb3IgYW5kIHRvcnR1cmUgZGV2aWNlcy4gV2lsbCBvdXIgaGFwbGVzcyBoZXJvIG1ha2UgaXQgb3V0IGFsaXZlPyIsInJlbGVhc2VfZGF0ZSI6IjE5MzEtMDctMjQifSx7InZvdGVfYXZlcmFnZSI6Ni44LCJ2b3RlX2NvdW50IjoxMSwiaWQiOjg1MDUxLCJ2aWRlbyI6ZmFsc2UsIm1lZGlhX3R5cGUiOiJtb3ZpZSIsInRpdGxlIjoiTWlubmllIHRoZSBNb29jaGVyIiwicG9wdWxhcml0eSI6MS4wODcxMzIsInBvc3Rlcl9wYXRoIjoiXC9xeFNUamJhS0xhdzIwb21zQVFXWUc3UmJScm4uanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTWlubmllIHRoZSBNb29jaGVyIiwiZ2VucmVfaWRzIjpbMTA0MDIsMTYsMzVdLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJhZHVsdCI6ZmFsc2UsIm92ZXJ2aWV3IjoiQmV0dHkgQm9vcCBhbmQgQmltYm8gcnVuIGF3YXkgZnJvbSBob21lLCBidXQgdGhhdCBuaWdodCB0aGV5IGFyZSBzY2FyZWQgYnkgYSBjaG9ydXMgb2YgZ2hvc3RzIHNpbmdpbmcgdGhlIHRpdGxlIHNvbmcuIiwicmVsZWFzZV9kYXRlIjoiMTkzMi0wMy0xMSJ9LHsidm90ZV9hdmVyYWdlIjo2LCJ2b3RlX2NvdW50Ijo0LCJpZCI6MTY2NTU2LCJ2aWRlbyI6ZmFsc2UsIm1lZGlhX3R5cGUiOiJtb3ZpZSIsInRpdGxlIjoiRGl6enkgRGlzaGVzIiwicG9wdWxhcml0eSI6MS4wMDgzNDQsInBvc3Rlcl9wYXRoIjoiXC9xOVVZNlpvNVpmZkNOSzJMcU8wcDlPVWw5dkQuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiRGl6enkgRGlzaGVzIiwiZ2VucmVfaWRzIjpbMTYsMzVdLCJiYWNrZHJvcF9wYXRoIjoiXC9qOWhKUmxPUnRiUzhMcWUyV0RwQ05qbEV3VnEuanBnIiwiYWR1bHQiOmZhbHNlLCJvdmVydmlldyI6IlRoZSBGbGVpc2NoZXIncyBUYWxrYXJ0b29uIHNob3J0IHRoYXQgZGVidXRlZCB0aGUgbm93IGluZmFtb3VzIEJldHR5IEJvb3AuIiwicmVsZWFzZV9kYXRlIjoiMTkzMC0wOC0wOCJ9XSwiYWR1bHQiOmZhbHNlfV19
    http_version: 
  recorded_at: Mon, 21 Aug 2017 20:44:30 GMT
- request:
    method: get
    uri: http://api.themoviedb.org/3/person/3/combined_credits?api_key=bcd158ce3aca8369ca10bc884546da6e
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json
  response:
    status:
      code: 200
      message: OK
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Mon, 21 Aug 2017 20:44:30 GMT
      Etag:
      - 15d84e9a5eceb67bcb8fb0e8c839a903
      Server:
      - openresty
      Vary:
      - Accept-Encoding
      X-Ratelimit-Limit:
      - '40'
      X-Ratelimit-Remaining:
      - '38'
      X-Ratelimit-Reset:
      - '1503348280'
      Content-Length:
      - '91131'
      X-Cache:
      - MISS from m00180A854B18
      X-Cache-Lookup:
      - MISS from m00180A854B18:3128
      Via:
      - 1.1 m00180A854B18 (squid/3.5.19)
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Mon, 21 Aug 2017 20:44:30 GMT
recorded_with: VCR 3.0.3
